{"ast":null,"code":"import { map } from 'rxjs';\nimport { KapparuGridComponent } from 'src/app/shared/kapparu-grid/kapparu-grid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ag-grid-angular\";\n\nfunction PortfolioMonitorComponent_ag_grid_angular_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ag-grid-angular\", 5);\n    i0.ɵɵlistener(\"gridReady\", function PortfolioMonitorComponent_ag_grid_angular_5_Template_ag_grid_angular_gridReady_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onGridReady($event));\n    })(\"rowDataChanged\", function PortfolioMonitorComponent_ag_grid_angular_5_Template_ag_grid_angular_rowDataChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onRowDataChanged($event));\n    })(\"rowDoubleClicked\", function PortfolioMonitorComponent_ag_grid_angular_5_Template_ag_grid_angular_rowDoubleClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onPositionRowDoubleClicked($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rowData\", ctx_r0.positions)(\"columnDefs\", ctx_r0.positionColumnDefs);\n  }\n}\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nexport let PortfolioMonitorComponent = /*#__PURE__*/(() => {\n  class PortfolioMonitorComponent extends KapparuGridComponent {\n    constructor(http, router, route) {\n      super();\n      this.http = http;\n      this.router = router;\n      this.route = route;\n      this.portfolioId = 1;\n      this.positions = [];\n      this.txns = [];\n      this.columnDefs = [{\n        headerName: 'Name',\n        field: 'name'\n      }, {\n        headerName: 'Value',\n        field: 'value',\n        width: 100,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Model',\n        field: 'model',\n        width: 70,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, this.colActual('percentTotal'), {\n        headerName: 'Cash',\n        field: 'cash',\n        width: 100,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: '%',\n        field: 'percentCash',\n        width: 70,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }];\n      this.returnsColumnDefs = [this.colReturns('Day', 'oneDay'), this.colReturns('YTD', 'yearToDate'), this.colReturns('Week', 'oneWeek'), this.colReturns('Month', 'oneMonth'), this.colReturns('3 Month', 'threeMonths'), this.colReturns('Year', 'oneYear'), this.colReturns('5 Year', 'fiveYears'), this.colReturns('10 Year', 'tenYears'), {\n        headerName: 'Profit YTD',\n        field: 'profitYearToDate',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Profit Lifetime',\n        field: 'profitLifetime',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }];\n      this.positionColumnDefs = [{\n        headerName: 'Symbol',\n        field: 'symbol'\n      }, {\n        headerName: 'Price',\n        field: 'price',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Quantity',\n        field: 'quantity',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Value',\n        field: 'value',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Model',\n        field: 'model',\n        width: 70,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, this.colActual('percentPortfolio')];\n      this.txnColumnDefs = [{\n        headerName: 'Date',\n        field: 'date',\n        width: this.dateWidth,\n        valueFormatter: this.dateFormatter\n      }, {\n        headerName: 'Type',\n        field: 'type',\n        width: this.tickerWidth,\n        valueFormatter: this.transactionTypeFormatter\n      }, {\n        headerName: 'Symbol',\n        field: 'positionAfter.symbol',\n        width: this.tickerWidth\n      }, {\n        headerName: 'TxnQty',\n        field: 'quantity',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'TxnValue',\n        field: 'value',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }];\n    }\n\n    ngOnInit() {\n      if (this.route.snapshot.paramMap.has('portfolioId')) {\n        this.portfolioId = +this.route.snapshot.paramMap.get('portfolioId');\n      }\n\n      this.rowData = this.http.get('http://localhost:8081/blue-lion/read/enriched-portfolios/' + this.portfolioId).pipe(map(receivedData => {\n        return Array.of(receivedData);\n      }));\n      this.http.get('http://localhost:8081/blue-lion/read/portfolio-returns/' + this.portfolioId).subscribe(returns => this.returns = returns);\n      this.http.get('http://localhost:8081/blue-lion/read/enriched-positions?portfolioId=' + this.portfolioId).subscribe(positions => this.positions = positions);\n      this.http.get('http://localhost:8081/blue-lion/read/transactions?portfolioId=' + this.portfolioId).subscribe(txns => this.txns = txns);\n    }\n\n    onPositionRowDoubleClicked(params) {\n      this.router.navigate(['/position-monitor', {\n        positionId: params.data.id\n      }]);\n    }\n\n  }\n\n  PortfolioMonitorComponent.ɵfac = function PortfolioMonitorComponent_Factory(t) {\n    return new (t || PortfolioMonitorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  PortfolioMonitorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PortfolioMonitorComponent,\n    selectors: [[\"app-portfolio-monitor\"]],\n    inputs: {\n      rowData: \"rowData\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 8,\n    vars: 11,\n    consts: [[1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"53px\", 3, \"rowData\", \"columnDefs\", \"gridReady\", \"rowDataChanged\"], [1, \"row\"], [1, \"col\"], [\"domLayout\", \"autoHeight\", \"class\", \"ag-theme-alpine\", 3, \"rowData\", \"columnDefs\", \"gridReady\", \"rowDataChanged\", \"rowDoubleClicked\", 4, \"ngIf\"], [\"domLayout\", \"autoHeight\", 1, \"ag-theme-alpine\", 3, \"rowData\", \"columnDefs\"], [\"domLayout\", \"autoHeight\", 1, \"ag-theme-alpine\", 3, \"rowData\", \"columnDefs\", \"gridReady\", \"rowDataChanged\", \"rowDoubleClicked\"]],\n    template: function PortfolioMonitorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ag-grid-angular\", 0);\n        i0.ɵɵlistener(\"gridReady\", function PortfolioMonitorComponent_Template_ag_grid_angular_gridReady_0_listener($event) {\n          return ctx.onGridReady($event);\n        })(\"rowDataChanged\", function PortfolioMonitorComponent_Template_ag_grid_angular_rowDataChanged_0_listener($event) {\n          return ctx.onRowDataChanged($event);\n        });\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ag-grid-angular\", 0);\n        i0.ɵɵlistener(\"gridReady\", function PortfolioMonitorComponent_Template_ag_grid_angular_gridReady_2_listener($event) {\n          return ctx.onGridReady($event);\n        })(\"rowDataChanged\", function PortfolioMonitorComponent_Template_ag_grid_angular_rowDataChanged_2_listener($event) {\n          return ctx.onRowDataChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2);\n        i0.ɵɵtemplate(5, PortfolioMonitorComponent_ag_grid_angular_5_Template, 1, 2, \"ag-grid-angular\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"ag-grid-angular\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"rowData\", i0.ɵɵpipeBind1(1, 7, ctx.rowData))(\"columnDefs\", ctx.columnDefs);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"rowData\", i0.ɵɵpureFunction1(9, _c0, ctx.returns))(\"columnDefs\", ctx.returnsColumnDefs);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.positions.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"rowData\", ctx.txns)(\"columnDefs\", ctx.txnColumnDefs);\n      }\n    },\n    dependencies: [i3.NgIf, i4.AgGridAngular, i3.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{display:flex;flex-direction:column}.row[_ngcontent-%COMP%]{display:flex;flex-direction:row}.col[_ngcontent-%COMP%]{flex:0 1 50%}\"]\n  });\n  return PortfolioMonitorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}