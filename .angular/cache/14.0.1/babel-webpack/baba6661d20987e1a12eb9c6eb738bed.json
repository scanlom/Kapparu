{"ast":null,"code":"import * as moment from 'moment';\nimport { KapparuGridComponent } from 'src/app/shared/kapparu-grid/kapparu-grid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/merger.service\";\nimport * as i4 from \"ag-grid-angular\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/common\";\nexport let MergersMonitorComponent = /*#__PURE__*/(() => {\n  class MergersMonitorComponent extends KapparuGridComponent {\n    constructor(http, router, mergerService) {\n      super();\n      this.http = http;\n      this.router = router;\n      this.mergerService = mergerService;\n      this.columnDefsPortfolio = [{\n        headerName: 'ID',\n        field: 'id',\n        hide: true\n      }, this.colUpdateDate, {\n        headerName: 'Target',\n        field: 'targetTicker',\n        width: this.tickerWidth\n      }, {\n        headerName: 'Description',\n        field: 'targetDescription',\n        width: this.descriptionWidth\n      }, {\n        headerName: 'Acquirer',\n        field: 'acquirerTicker',\n        width: this.tickerWidth\n      }, {\n        headerName: 'Description',\n        field: 'acquirerDescription',\n        width: this.descriptionWidth\n      }, {\n        headerName: 'Net',\n        field: 'marketNetReturn',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, this.colMergersNetAnnualized, {\n        headerName: 'Positive',\n        field: 'marketPositiveReturn',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Annualized',\n        field: 'marketPositiveReturnAnnualized',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Confidence',\n        field: 'confidence',\n        width: this.tickerWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Close',\n        field: 'closeDate',\n        width: this.dateWidth,\n        valueFormatter: this.dateFormatter\n      }, {\n        headerName: '% Portfolio',\n        field: 'percentPortfolio',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }];\n      this.columnDefsWatch = [{\n        headerName: 'ID',\n        field: 'id',\n        hide: true\n      }, this.colDate, {\n        headerName: 'Target',\n        field: 'targetTicker',\n        width: this.tickerWidth\n      }, {\n        headerName: 'Description',\n        field: 'targetDescription',\n        width: this.descriptionWidth\n      }, {\n        headerName: 'Acquirer',\n        field: 'acquirerTicker',\n        width: this.tickerWidth\n      }, {\n        headerName: 'Description',\n        field: 'acquirerDescription',\n        width: this.descriptionWidth\n      }, {\n        headerName: 'Net',\n        field: 'marketNetReturn',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, this.colMergersNetAnnualized, {\n        headerName: 'Positive',\n        field: 'marketPositiveReturn',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Annualized',\n        field: 'marketPositiveReturnAnnualized',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Confidence',\n        field: 'confidence',\n        width: this.tickerWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Close',\n        field: 'closeDate',\n        width: this.dateWidth,\n        valueFormatter: this.dateFormatter\n      }, {\n        headerName: '% Portfolio',\n        field: 'percentPortfolio',\n        width: this.percentWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.percentFormatter\n      }, {\n        headerName: 'Status',\n        field: 'status',\n        width: this.tickerWidth\n      }];\n    }\n\n    ngOnInit() {\n      this.positionsData = this.http.get('http://localhost:8081/blue-lion/read/enriched-mergers-positions');\n      this.positionsTotalData = this.http.get('http://localhost:8081/blue-lion/read/enriched-mergers-positions-total');\n      this.researchData = this.http.get('http://localhost:8081/blue-lion/read/enriched-mergers-research');\n    }\n\n    onRowDoubleClicked(params) {\n      this.router.navigate(['/mergers-editor', {\n        id: params.data.id\n      }]);\n    }\n\n    addMerger() {\n      const that = this;\n      this.mergerService.addMerger({\n        date: moment().format(\"YYYY-MM-DD\"),\n        acquirerTicker: this.acquirerTicker,\n        targetTicker: this.targetTicker,\n        dealPrice: this.dealPrice,\n        failPrice: this.failPrice,\n        announceDate: this.announceDate,\n        closeDate: this.closeDate,\n        breakDate: \"1900-01-01\",\n        meetingDate: \"1900-01-01\",\n        confidence: this.confidence,\n        dividends: this.dividends\n      }).subscribe({\n        next(m) {\n          that.ngOnInit();\n        }\n\n      });\n    }\n\n  }\n\n  MergersMonitorComponent.ɵfac = function MergersMonitorComponent_Factory(t) {\n    return new (t || MergersMonitorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MergerService));\n  };\n\n  MergersMonitorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MergersMonitorComponent,\n    selectors: [[\"app-mergers-monitor\"]],\n    inputs: {\n      acquirerTicker: \"acquirerTicker\",\n      targetTicker: \"targetTicker\",\n      dealPrice: \"dealPrice\",\n      failPrice: \"failPrice\",\n      announceDate: \"announceDate\",\n      closeDate: \"closeDate\",\n      confidence: \"confidence\",\n      dividends: \"dividends\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 51,\n    vars: 20,\n    consts: [[\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"string\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"domLayout\", \"autoHeight\", 1, \"ag-theme-alpine\", 2, \"width\", \"100%\", 3, \"rowData\", \"columnDefs\", \"rowDoubleClicked\"], [1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"53px\", 3, \"rowData\", \"columnDefs\"]],\n    template: function MergersMonitorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\")(1, \"tr\")(2, \"td\")(3, \"mat-form-field\", 0)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"acquirerTicker\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.acquirerTicker = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"td\")(8, \"mat-form-field\", 0)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"targetTicker\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.targetTicker = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"td\")(13, \"mat-form-field\", 0)(14, \"mat-label\");\n        i0.ɵɵtext(15, \"dealPrice\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.dealPrice = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"td\")(18, \"mat-form-field\", 0)(19, \"mat-label\");\n        i0.ɵɵtext(20, \"failPrice\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.failPrice = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"td\")(23, \"mat-form-field\", 0)(24, \"mat-label\");\n        i0.ɵɵtext(25, \"announceDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.announceDate = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"td\")(28, \"mat-form-field\", 0)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"closeDate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_31_listener($event) {\n          return ctx.closeDate = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"td\")(33, \"mat-form-field\", 0)(34, \"mat-label\");\n        i0.ɵɵtext(35, \"confidence\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_36_listener($event) {\n          return ctx.confidence = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"td\")(38, \"mat-form-field\", 0)(39, \"mat-label\");\n        i0.ɵɵtext(40, \"dividends\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MergersMonitorComponent_Template_input_ngModelChange_41_listener($event) {\n          return ctx.dividends = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"td\")(43, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function MergersMonitorComponent_Template_button_click_43_listener() {\n          return ctx.addMerger();\n        });\n        i0.ɵɵtext(44, \"Add Merger\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(45, \"ag-grid-angular\", 5);\n        i0.ɵɵlistener(\"rowDoubleClicked\", function MergersMonitorComponent_Template_ag_grid_angular_rowDoubleClicked_45_listener($event) {\n          return ctx.onRowDoubleClicked($event);\n        });\n        i0.ɵɵpipe(46, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"ag-grid-angular\", 6);\n        i0.ɵɵpipe(48, \"async\");\n        i0.ɵɵelementStart(49, \"ag-grid-angular\", 5);\n        i0.ɵɵlistener(\"rowDoubleClicked\", function MergersMonitorComponent_Template_ag_grid_angular_rowDoubleClicked_49_listener($event) {\n          return ctx.onRowDoubleClicked($event);\n        });\n        i0.ɵɵpipe(50, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.acquirerTicker);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.targetTicker);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.dealPrice);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.failPrice);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.announceDate);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.closeDate);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.confidence);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.dividends);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"rowData\", i0.ɵɵpipeBind1(46, 14, ctx.positionsData))(\"columnDefs\", ctx.columnDefsPortfolio);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"rowData\", i0.ɵɵpipeBind1(48, 16, ctx.positionsTotalData))(\"columnDefs\", ctx.columnDefsPortfolio);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"rowData\", i0.ɵɵpipeBind1(50, 18, ctx.researchData))(\"columnDefs\", ctx.columnDefsWatch);\n      }\n    },\n    dependencies: [i4.AgGridAngular, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatButton, i8.DefaultValueAccessor, i8.NumberValueAccessor, i8.NgControlStatus, i8.NgModel, i9.AsyncPipe]\n  });\n  return MergersMonitorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}