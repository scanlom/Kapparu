{"ast":null,"code":"import { map } from 'rxjs';\nimport { KapparuGridComponent } from 'src/app/shared/kapparu-grid/kapparu-grid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/services/ref-data.service\";\nimport * as i3 from \"ag-grid-angular\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/checkbox\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/common\";\nexport let RefDataEditorComponent = /*#__PURE__*/(() => {\n  class RefDataEditorComponent extends KapparuGridComponent {\n    constructor(http, refDataService) {\n      super();\n      this.http = http;\n      this.refDataService = refDataService;\n      this.symbol = 'BKNG'; //@Input() ticker: string;\n\n      this.columnDefs = [{\n        headerName: 'ID',\n        field: 'id'\n      }, {\n        headerName: 'Symbol',\n        field: 'symbol'\n      }, {\n        headerName: 'SymbolAlphaVantage',\n        field: 'symbolAlphaVantage'\n      }, {\n        headerName: 'Description',\n        field: 'description'\n      }, {\n        headerName: 'Sector',\n        field: 'sector'\n      }, {\n        headerName: 'Industry',\n        field: 'industry'\n      }, {\n        headerName: 'Active',\n        field: 'active'\n      }, {\n        headerName: 'Focus',\n        field: 'focus'\n      }];\n    }\n\n    ngOnInit() {\n      this.rowData = this.http.get('http://localhost:8081/blue-lion/read/ref-data?symbol=' + this.symbol).pipe(map(receivedData => {\n        return Array.of(receivedData);\n      }));\n    }\n\n    onEnter(value) {\n      this.rowData = this.http.get('http://localhost:8081/blue-lion/read/ref-data?symbol=' + value).pipe(map(refData => {\n        this.id = refData.id;\n        this.symbol = refData.symbol;\n        this.symbolAlphaVantage = refData.symbolAlphaVantage;\n        this.description = refData.description;\n        this.sector = refData.sector;\n        this.industry = refData.industry;\n        this.active = refData.active;\n        this.focus = refData.focus;\n        return Array.of(refData);\n      }));\n    }\n\n    updateRefData() {\n      const that = this;\n      this.refDataService.updateRefData({\n        id: this.id,\n        symbol: this.symbol,\n        symbolAlphaVantage: this.symbolAlphaVantage,\n        description: this.description,\n        sector: this.sector,\n        industry: this.industry,\n        active: this.active,\n        focus: this.focus\n      }).subscribe({\n        next(m) {\n          that.ngOnInit();\n        }\n\n      });\n    }\n\n    addRefData() {\n      const that = this;\n      this.refDataService.addRefData({\n        id: 0,\n        symbol: this.symbol,\n        symbolAlphaVantage: this.symbolAlphaVantage,\n        description: this.description,\n        sector: this.sector,\n        industry: this.industry,\n        active: this.active,\n        focus: this.focus\n      }).subscribe({\n        next(m) {\n          that.ngOnInit();\n        }\n\n      });\n    }\n\n  }\n\n  RefDataEditorComponent.ɵfac = function RefDataEditorComponent_Factory(t) {\n    return new (t || RefDataEditorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.RefDataService));\n  };\n\n  RefDataEditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RefDataEditorComponent,\n    selectors: [[\"app-ref-data-editor\"]],\n    inputs: {\n      id: \"id\",\n      symbol: \"symbol\",\n      symbolAlphaVantage: \"symbolAlphaVantage\",\n      description: \"description\",\n      industry: \"industry\",\n      sector: \"sector\",\n      active: \"active\",\n      focus: \"focus\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 43,\n    vars: 11,\n    consts: [[3, \"keyup.enter\"], [\"ticker\", \"\"], [1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"53px\", 3, \"rowData\", \"columnDefs\", \"gridReady\", \"rowDataChanged\"], [\"appearance\", \"outline\"], [\"type\", \"string\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function RefDataEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"keyup.enter\", function RefDataEditorComponent_Template_input_keyup_enter_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return i0.ɵɵresetView(ctx.onEnter(_r0.value));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ag-grid-angular\", 2);\n        i0.ɵɵlistener(\"gridReady\", function RefDataEditorComponent_Template_ag_grid_angular_gridReady_2_listener($event) {\n          return ctx.onGridReady($event);\n        })(\"rowDataChanged\", function RefDataEditorComponent_Template_ag_grid_angular_rowDataChanged_2_listener($event) {\n          return ctx.onRowDataChanged($event);\n        });\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\")(5, \"tr\")(6, \"td\")(7, \"mat-form-field\", 3)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"symbol\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.symbol = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"td\")(12, \"mat-form-field\", 3)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"symbolAlphaVantage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.symbolAlphaVantage = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"td\")(17, \"mat-form-field\", 3)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.description = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"td\")(22, \"mat-form-field\", 3)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"sector\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.sector = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"td\")(27, \"mat-form-field\", 3)(28, \"mat-label\");\n        i0.ɵɵtext(29, \"industry\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_input_ngModelChange_30_listener($event) {\n          return ctx.industry = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"td\")(32, \"mat-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_mat_checkbox_ngModelChange_32_listener($event) {\n          return ctx.active = $event;\n        });\n        i0.ɵɵtext(33, \"Active\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"td\")(35, \"mat-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RefDataEditorComponent_Template_mat_checkbox_ngModelChange_35_listener($event) {\n          return ctx.focus = $event;\n        });\n        i0.ɵɵtext(36, \"Focus\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(37, \"p\")(38, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function RefDataEditorComponent_Template_button_click_38_listener() {\n          return ctx.updateRefData();\n        });\n        i0.ɵɵtext(39, \"Update RefData\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"p\")(41, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function RefDataEditorComponent_Template_button_click_41_listener() {\n          return ctx.addRefData();\n        });\n        i0.ɵɵtext(42, \"Add RefData\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"rowData\", i0.ɵɵpipeBind1(3, 9, ctx.rowData))(\"columnDefs\", ctx.columnDefs);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.symbol);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.symbolAlphaVantage);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.description);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.sector);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.industry);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.active);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.focus);\n      }\n    },\n    dependencies: [i3.AgGridAngular, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatCheckbox, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i8.AsyncPipe]\n  });\n  return RefDataEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}