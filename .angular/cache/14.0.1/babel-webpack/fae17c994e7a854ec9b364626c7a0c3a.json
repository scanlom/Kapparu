{"ast":null,"code":"import { KapparuGridComponent } from 'src/app/shared/kapparu-grid/kapparu-grid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ag-grid-angular\";\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction PositionMonitorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"ag-grid-angular\", 1)(2, \"ag-grid-angular\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"rowData\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.position))(\"columnDefs\", ctx_r0.columnDefs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"rowData\", ctx_r0.txns)(\"columnDefs\", ctx_r0.txnsColumnDefs);\n  }\n}\n\nexport let PositionMonitorComponent = /*#__PURE__*/(() => {\n  class PositionMonitorComponent extends KapparuGridComponent {\n    constructor(http, router, route) {\n      super();\n      this.http = http;\n      this.router = router;\n      this.route = route;\n      this.txns = [];\n      this.columnDefs = [{\n        headerName: 'Symbol',\n        field: 'symbol'\n      }, {\n        headerName: 'Value',\n        field: 'value',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }];\n      this.txnsColumnDefs = [{\n        headerName: 'Date',\n        field: 'date',\n        valueFormatter: this.dateFormatter\n      }, {\n        headerName: 'Type',\n        field: 'type',\n        valueFormatter: this.transactionTypeFormatter\n      }, {\n        headerName: 'Value',\n        field: 'value',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'CostBasis',\n        field: 'positionAfter.costBasis',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'TotalCashInfusion',\n        field: 'positionAfter.totalCashInfusion',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'CumDivs',\n        field: 'positionAfter.accumulatedDividends',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Index',\n        field: 'positionAfter.index',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'Divisor',\n        field: 'positionAfter.divisor',\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.divisorFormatter\n      }];\n    }\n\n    ngOnInit() {\n      if (this.route.snapshot.paramMap.has('positionId')) {\n        this.positionId = +this.route.snapshot.paramMap.get('positionId');\n      }\n\n      this.http.get('http://localhost:8081/blue-lion/read/enriched-positions/' + this.positionId).subscribe(position => this.position = position);\n      this.http.get('http://localhost:8081/blue-lion/read/transactions?positionId=' + this.positionId).subscribe(txns => this.txns = txns);\n    }\n\n  }\n\n  PositionMonitorComponent.ɵfac = function PositionMonitorComponent_Factory(t) {\n    return new (t || PositionMonitorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  PositionMonitorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PositionMonitorComponent,\n    selectors: [[\"app-position-monitor\"]],\n    inputs: {\n      position: \"position\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"53px\", 3, \"rowData\", \"columnDefs\"], [\"domLayout\", \"autoHeight\", 1, \"ag-theme-alpine\", 2, \"width\", \"100%\", 3, \"rowData\", \"columnDefs\"]],\n    template: function PositionMonitorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PositionMonitorComponent_div_0_Template, 3, 6, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !!ctx.position);\n      }\n    },\n    dependencies: [i3.NgIf, i4.AgGridAngular]\n  });\n  return PositionMonitorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}