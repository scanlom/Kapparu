{"ast":null,"code":"import { KapparuGridComponent } from 'src/app/shared/kapparu-grid/kapparu-grid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ag-grid-angular\";\nexport let TransactionsMonitorComponent = /*#__PURE__*/(() => {\n  class TransactionsMonitorComponent extends KapparuGridComponent {\n    constructor(http, router, route) {\n      super();\n      this.http = http;\n      this.router = router;\n      this.route = route;\n      this.txns = [];\n      this.defaultColDef = {\n        // set filtering on for all columns\n        filter: true\n      };\n      this.columnDefs = [{\n        headerName: 'Date',\n        field: 'date',\n        width: this.dateWidth,\n        valueFormatter: this.dateFormatter\n      }, {\n        headerName: 'Type',\n        field: 'type',\n        width: this.tickerWidth,\n        valueFormatter: this.transactionTypeFormatter\n      }, {\n        headerName: 'Portfolio',\n        field: 'portfolioId',\n        width: this.tickerWidth,\n        valueFormatter: this.portfolioIdFormatter\n      }, {\n        headerName: 'Symbol',\n        field: 'positionAfter.symbol',\n        width: this.tickerWidth\n      }, {\n        headerName: 'TxnQty',\n        field: 'quantity',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'TxnValue',\n        field: 'value',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosBCostBasis',\n        field: 'positionBefore.costBasis',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosBTCI',\n        field: 'positionBefore.totalCashInfusion',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosBCumDivs',\n        field: 'positionBefore.accumulatedDividends',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosBQty',\n        field: 'positionBefore.quantity',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosBValue',\n        field: 'positionBefore.value',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosBDivisor',\n        field: 'positionBefore.divisor',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.divisorFormatter\n      }, {\n        headerName: 'PosBIndex',\n        field: 'positionBefore.index',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosACostBasis',\n        field: 'positionAfter.costBasis',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosATCI',\n        field: 'positionAfter.totalCashInfusion',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosACumDivs',\n        field: 'positionAfter.accumulatedDividends',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosAQuantity',\n        field: 'positionAfter.quantity',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosAValue',\n        field: 'positionAfter.value',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PosADivisor',\n        field: 'positionAfter.divisor',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.divisorFormatter\n      }, {\n        headerName: 'PosAIndex',\n        field: 'positionAfter.index',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PortBTCI',\n        field: 'portfolioAfter.totalCashInfusion',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PortBValue',\n        field: 'portfolioBefore.value',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PortBDivisor',\n        field: 'portfolioBefore.divisor',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.divisorFormatter\n      }, {\n        headerName: 'PortBIndex',\n        field: 'portfolioBefore.index',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PortATCI',\n        field: 'portfolioAfter.totalCashInfusion',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PortAValue',\n        field: 'portfolioAfter.value',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }, {\n        headerName: 'PortADivisor',\n        field: 'portfolioAfter.divisor',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.divisorFormatter\n      }, {\n        headerName: 'PortAIndex',\n        field: 'portfolioAfter.index',\n        width: this.valueWidth,\n        cellStyle: {\n          textAlign: \"right\"\n        },\n        valueFormatter: this.currencyFormatter\n      }];\n    }\n\n    ngOnInit() {\n      this.http.get('http://localhost:8081/blue-lion/read/transactions').subscribe(txns => this.txns = txns);\n    }\n\n  }\n\n  TransactionsMonitorComponent.ɵfac = function TransactionsMonitorComponent_Factory(t) {\n    return new (t || TransactionsMonitorComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  TransactionsMonitorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionsMonitorComponent,\n    selectors: [[\"app-transactions-monitor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 3,\n    consts: [[\"domLayout\", \"autoHeight\", 1, \"ag-theme-alpine\", 2, \"width\", \"100%\", 3, \"rowData\", \"defaultColDef\", \"columnDefs\"]],\n    template: function TransactionsMonitorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"ag-grid-angular\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"rowData\", ctx.txns)(\"defaultColDef\", ctx.defaultColDef)(\"columnDefs\", ctx.columnDefs);\n      }\n    },\n    dependencies: [i3.AgGridAngular]\n  });\n  return TransactionsMonitorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}